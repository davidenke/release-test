name: Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  try:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
      - run: echo $GITHUB_CONTEXT
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
      - name: Read PR ids from GitHub
        run: |
          pr_ids=$(gh api --header 'Accept: application/vnd.github+json' --method GET /repos/${{ github.repository }}/pulls | jq -r '. | map(.number) | join("\\|")')
          echo "${pr_ids}"
          find pr -type d -mindepth 1 -maxdepth 1 -not -regex "^pr\/\(${pr_ids}\)" # -exec rm -rf {} \;
        env:
          GH_TOKEN: ${{ github.token }}
      - name: Get list of releases from GitHub
        run: |
          released_versions=$(gh api --header 'Accept: application/vnd.github+json' --method GET /repos/${{ github.repository }}/releases | jq -r '. + [{"tag_name": "latest"}, {"tag_name": "pr"}] | map(.tag_name | sub("\\.";"\\.";"g")) | join("\\|")')
          echo "${released_versions}"
          find . -not -path '*/.*' -type d -mindepth 1 -maxdepth 1 -not -regex "^\.\/\(${released_versions}\)" # -exec rm -rf {} \;
        env:
          GH_TOKEN: ${{ github.token }}

  lint:
    if: 1 > 2
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: 7
      - uses: actions/setup-node@v3
        with:
          cache: "pnpm"
          node-version: 18.15.0
      - run: pnpm install --frozen-lockfile
      - run: pnpm lint

  test:
    name: Test
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: 7
      - uses: actions/setup-node@v3
        with:
          cache: "pnpm"
          node-version: 18.15.0
      - run: pnpm install --frozen-lockfile
      - run: pnpm test

  build:
    name: Build
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: 7
      - uses: actions/setup-node@v3
        with:
          cache: "pnpm"
          node-version: 18.15.0
      - run: pnpm install --frozen-lockfile
      - run: pnpm build
      - uses: actions/upload-artifact@v3
        if: success()
        with:
          name: latest
          path: dist

  release:
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    name: Release
    needs: build
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: 7
      - uses: actions/setup-node@v3
        with:
          cache: "pnpm"
          node-version: 18.15.0
      - uses: actions/download-artifact@v3
        with:
          name: latest
          path: dist
      - run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
      - run: |
          pnpm dlx release-it --ci \
                              --no-npm.publish \
                              --github.release \
                              --github.assets=$(npm pack --silent) \
                              --github.autoGenerate \
                              --git.commitMessage='chore: release v${version}' \
                              --git.pushArgs=--follow-tags
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
